// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "github.com/edgexfoundry/device-sdk-go/v2/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// EventReporter is an autogenerated mock type for the EventReporter type
type EventReporter struct {
	mock.Mock
}

// ReportEvent provides a mock function with given fields: deviceName, value
func (_m *EventReporter) ReportEvent(deviceName string, value *models.CommandValue) error {
	ret := _m.Called(deviceName, value)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *models.CommandValue) error); ok {
		r0 = rf(deviceName, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReportEvents provides a mock function with given fields: deviceName, values
func (_m *EventReporter) ReportEvents(deviceName string, values []*models.CommandValue) error {
	ret := _m.Called(deviceName, values)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []*models.CommandValue) error); ok {
		r0 = rf(deviceName, values)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewEventReporter interface {
	mock.TestingT
	Cleanup(func())
}

// NewEventReporter creates a new instance of EventReporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEventReporter(t mockConstructorTestingTNewEventReporter) *EventReporter {
	mock := &EventReporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
