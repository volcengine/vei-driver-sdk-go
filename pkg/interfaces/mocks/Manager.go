// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Manager is an autogenerated mock type for the Manager type
type Manager struct {
	mock.Mock
}

// OnAddDevice provides a mock function with given fields: deviceName
func (_m *Manager) OnAddDevice(deviceName string) {
	_m.Called(deviceName)
}

// OnHandleCommandsFailed provides a mock function with given fields: deviceName
func (_m *Manager) OnHandleCommandsFailed(deviceName string) {
	_m.Called(deviceName)
}

// OnHandleCommandsSuccessfully provides a mock function with given fields: deviceName
func (_m *Manager) OnHandleCommandsSuccessfully(deviceName string) {
	_m.Called(deviceName)
}

// OnRemoveDevice provides a mock function with given fields: deviceName
func (_m *Manager) OnRemoveDevice(deviceName string) {
	_m.Called(deviceName)
}

type mockConstructorTestingTNewManager interface {
	mock.TestingT
	Cleanup(func())
}

// NewManager creates a new instance of Manager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewManager(t mockConstructorTestingTNewManager) *Manager {
	mock := &Manager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
