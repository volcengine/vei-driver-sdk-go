// Code generated by mockery v2.40.0. DO NOT EDIT.

package mocks

import (
	contracts "github.com/volcengine/vei-driver-sdk-go/pkg/contracts"

	mock "github.com/stretchr/testify/mock"
)

// Discovery is an autogenerated mock type for the Discovery type
type Discovery struct {
	mock.Mock
}

// Discover provides a mock function with given fields:
func (_m *Discovery) Discover() []*contracts.Device {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Discover")
	}

	var r0 []*contracts.Device
	if rf, ok := ret.Get(0).(func() []*contracts.Device); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*contracts.Device)
		}
	}

	return r0
}

// NewDiscovery creates a new instance of Discovery. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDiscovery(t interface {
	mock.TestingT
	Cleanup(func())
}) *Discovery {
	mock := &Discovery{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
